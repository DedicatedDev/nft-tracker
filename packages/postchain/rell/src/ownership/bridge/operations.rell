operation add_contract(chain: text, address: pubkey, type: text) {
    _add_contract(chain, address, type);
}

operation transfer_ownership(chain: name, contract: byte_array, nft_id: integer, owner_id: byte_array, block_number: integer) {
    _transfer_ownership(chain, contract, nft_id, owner_id, block_number);
}

operation transfer_batch_ownership(
    chain:text, 
    contract_address: byte_array, 
    type: text,
    tokens: list<(token_id: integer, owner_id: byte_array, block_number: integer)>
) {

    /*
    Update ownership of multiple NFTs in a single transaction.
    */
    for (idx in range(tokens.size())) {
        _transfer_ownership(
            chain,
            contract_address,
            tokens[idx].token_id,
            tokens[idx].owner_id,
            tokens[idx].block_number
        );
    }

    /*
    Update trace status.
    */
    _update_record_status(chain, contract_address,type);
}

operation update_trace_status(  
   contracts: list<(chain:text, contract_address: byte_array, type:text)>
) {
    for (idx in range(contracts.size())) {
        _update_record_status(contracts[idx].chain, contracts[idx].contract_address, contracts[idx].type);
    }
}
