operation add_contract(chain: text, pubkey: text, type: text) {
    val oracle_pubkey = get_oracle();
    require(op_context.is_signer(oracle_pubkey), "ownership: only admin can add contracts!");
    create contracts(chain, pubkey, type);
}

operation register_admin(pubkey: text) {
    if(admin @? {byte_array(pubkey)} == null){
        create admin(byte_array(pubkey));
    }
}

operation transfer_ownership(chain: name, contract: text, nft_id: integer, owner_id: text) {
    val oracle_pubkey = get_oracle();
    require(op_context.is_signer(oracle_pubkey), "Only an oracle can transfer ownership");

    if(empty(owner @? { owner_id })) {
        create owner(owner_id);
    }

    if(empty(nft @? { chain, contract, nft_id })) {
        create nft (chain, contract, nft_id);
    }
    
    val owner = owner @ { owner_id };
    val nft = nft @ { chain, contract, nft_id };
    val ownership = create ownership (
        owner = owner,
        nft = nft
    );
    delete current_owner @? { nft };
    create current_owner (
        ownership = ownership,
        nft = nft
    );
}